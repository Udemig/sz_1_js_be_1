import BaseController from "../../src/controller/base-controller.js";

/* Express'e route register yaparken route'larÄ±n slash ile baÅŸlama zorunluluÄŸu
vardÄ±r. Ã‡Ã¼nkÃ¼ slash ile baÅŸlamayan route'lar express tarafÄ±ndan tanÄ±nmÄ±yor ve
express bu durumda hata da vermiyor. Bundan dolayÄ± biz route'Ä± register ettiÄŸimizi
zannederken aslÄ±nda express tarafÄ±nda register olmuyor. Bu problemi kontrol
altÄ±nda tutmak iÃ§in controllerlardaki `httpRoutes` property'sinin keylerinin
(bunlar bizim route'larÄ±mÄ±z) slash ile baÅŸlayÄ±p baÅŸlamadÄ±ÄŸÄ±nÄ± kontrol ettiriyoruz.
EÄŸer slash ile baÅŸlamayan bir key varsa error throw etmesi gerekiyor. Ä°ÅŸte bu
kuralÄ±n testini aÅŸaÄŸÄ±da yazdÄ±k. */
test("registerHttpRoutes() function check all routes start slash", async () => {
  /* Ã–ncelikle sahte bir controller class'Ä± oluÅŸturalÄ±m. BÃ¶ylece `httpRoutes`
  property'sini set edebiliriz. ArdÄ±ndan bu class'tan yeni bir instance
  oluÅŸturup `registerHttpRoutes()` methodunu invoke ediyoruz. Bu method 'foo/foo'
  adresini gÃ¶rÃ¼nce hata fÄ±rlatmasÄ±nÄ± bekliyoruz. */
  class ExampleClass extends BaseController {
    httpRoutes = {
      // hem hatalÄ± hem doÄŸru olan route'larÄ± buraya yaz.
      "foo/foo": () => {},
      "/bar/bar": () => {},
    };
  }

  const dummyServer = {
    use: (route, callback) => {
      console.log(">> ðŸš€ route:", route);
      console.log(">> ðŸš€ callback:", callback);
      console.log("---------------------");
    },
  };

  const foo = new ExampleClass();
  try {
    // Burada hata fÄ±rlatmasÄ± gerekiyor. FÄ±rlatÄ±lan hata catch kÄ±smÄ±nda yakalanÄ±yor
    // ve gelen hata mesajÄ± kontrol ediliyor.
    foo.registerHttpRoutes(dummyServer);

    // EÄŸer bu satÄ±ra gelirse hata fÄ±rlatmamÄ±ÅŸ demektir, bu da bizim istediÄŸimiz
    // bir durum deÄŸil. Ã‡Ã¼nkÃ¼ ilk route'ta hata fÄ±rlatmasÄ±nÄ± istiyoruz.
    // Neden hata fÄ±rlatmalÄ±? Ã‡Ã¼nkÃ¼ bu route geÃ§erli bir route deÄŸil.
    expect(true).toBe("It must throw an error");
  } catch (e) {
    expect(e.message).toBe("This route must start with slash: foo/foo");
  }
});

test("base controller test 2", () => {
  console.log("Base controller test executed.");
});

test("base controller test 3", () => {
  console.log("Base controller test executed.");
});

test("base controller test 4", () => {
  console.log("Base controller test executed.");
});
